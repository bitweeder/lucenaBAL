/*------------------------------------------------------------------------------

	Lucena Build Abstraction Library
	“lbalStandardLibraryMSVCPostInitialization.hpp”
	Copyright © 2019-2020 Lucena
	All Rights Reserved

	This file is distributed under the University of Illinois Open Source
	License. See license/License.txt for details.

	See `lbalFeatureSetup.hpp` for descriptions of the various tokens.

------------------------------------------------------------------------------*/


#pragma once


//	lbal
#include <lucenaBAL/details/lbalConfig.hpp>
#include <lucenaBAL/details/lbalDetectStandardLibrary.hpp>
#include <lucenaBAL/details/lbalKnownVersions.hpp>


/*------------------------------------------------------------------------------
	MSVC Standard Library
*/

#if LBAL_TARGET_STANDARD_LIBRARY_MSVC
	//	C++14 Library Features
	#if LBAL_cpp_version > LBAL_CPP11_VERSION
		#if (_MSC_VER >= 1900)
			#if !defined (LBAL_LIBCPP14_CHRONO_UDLS)
				#define LBAL_LIBCPP14_CHRONO_UDLS 201304L
			#endif	//	LBAL_LIBCPP14_CHRONO_UDLS

			#if !defined (LBAL_LIBCPP14_COMPLEX_UDLS)
				#define LBAL_LIBCPP14_COMPLEX_UDLS 201309L
			#endif	//	LBAL_LIBCPP14_COMPLEX_UDLS

			#if !defined (LBAL_LIBCPP14_EXCHANGE_FUNCTION)
				#define LBAL_LIBCPP14_EXCHANGE_FUNCTION 201304L
			#endif	//	LBAL_LIBCPP14_EXCHANGE_FUNCTION

			#if !defined (LBAL_LIBCPP14_GENERIC_ASSOCIATIVE_LOOKUP)
				#define LBAL_LIBCPP14_GENERIC_ASSOCIATIVE_LOOKUP 201304L
			#endif	//	LBAL_LIBCPP14_GENERIC_ASSOCIATIVE_LOOKUP

			#if !defined (LBAL_LIBCPP14_INTEGER_SEQUENCE)
				#define LBAL_LIBCPP14_INTEGER_SEQUENCE 201304L
			#endif	//	LBAL_LIBCPP14_INTEGER_SEQUENCE

			#if !defined (LBAL_LIBCPP14_INTEGRAL_CONSTANT_CALLABLE)
				#define LBAL_LIBCPP14_INTEGRAL_CONSTANT_CALLABLE 201304L
			#endif	//	LBAL_LIBCPP14_INTEGRAL_CONSTANT_CALLABLE

			#if !defined (LBAL_LIBCPP14_IS_FINAL)
				#define LBAL_LIBCPP14_IS_FINAL 201402L
			#endif	//	LBAL_LIBCPP14_IS_FINAL

			#if !defined (LBAL_LIBCPP14_IS_NULL_POINTER)
				#define LBAL_LIBCPP14_IS_NULL_POINTER 201309L
			#endif	//	LBAL_LIBCPP14_IS_NULL_POINTER

			#if !defined (LBAL_LIBCPP14_MAKE_REVERSE_ITERATOR)
				#define LBAL_LIBCPP14_MAKE_REVERSE_ITERATOR 201402L
			#endif	//	LBAL_LIBCPP14_MAKE_REVERSE_ITERATOR

			#if !defined (LBAL_LIBCPP14_MAKE_UNIQUE)
				#define LBAL_LIBCPP14_MAKE_UNIQUE 201304L
			#endif	//	LBAL_LIBCPP14_MAKE_UNIQUE

			#if !defined (LBAL_LIBCPP14_NULL_ITERATORS)
				#define LBAL_LIBCPP14_NULL_ITERATORS 201304L
			#endif	//	LBAL_LIBCPP14_NULL_ITERATORS

			#if !defined (LBAL_LIBCPP14_QUOTED_STRING_IO)
				#define LBAL_LIBCPP14_QUOTED_STRING_IO 201304L
			#endif	//	LBAL_LIBCPP14_QUOTED_STRING_IO

			//	Technically, MSVS 2015.2, but the extended version numbers are
			//	inconsistent internationally, so we rely on our 2015.3+
			//	requirement.
			#if !defined (LBAL_LIBCPP14_RESULT_OF_SFINAE)
				#define LBAL_LIBCPP14_RESULT_OF_SFINAE 201210L
			#endif	//	LBAL_LIBCPP14_RESULT_OF_SFINAE

			#if !defined (LBAL_LIBCPP14_ROBUST_NONMODIFYING_SEQ_OPS)
				#define LBAL_LIBCPP14_ROBUST_NONMODIFYING_SEQ_OPS 201304L
			#endif	//	LBAL_LIBCPP14_ROBUST_NONMODIFYING_SEQ_OPS

			#if !defined (LBAL_LIBCPP14_SHARED_TIMED_MUTEX)
				#define LBAL_LIBCPP14_SHARED_TIMED_MUTEX 201402L
			#endif	//	LBAL_LIBCPP14_SHARED_TIMED_MUTEX

			#if !defined (LBAL_LIBCPP14_STRING_UDLS)
				#define LBAL_LIBCPP14_STRING_UDLS 201304L
			#endif	//	LBAL_LIBCPP14_STRING_UDLS

			#if !defined (LBAL_LIBCPP14_TRANSFORMATION_TRAIT_ALIASES)
				#define LBAL_LIBCPP14_TRANSFORMATION_TRAIT_ALIASES 201304L
			#endif	//	LBAL_LIBCPP14_TRANSFORMATION_TRAIT_ALIASES

			#if !defined (LBAL_LIBCPP14_TRANSPARENT_OPERATORS)
				#define LBAL_LIBCPP14_TRANSPARENT_OPERATORS 201210L
			#endif	//	LBAL_LIBCPP14_TRANSPARENT_OPERATORS

			#if !defined (LBAL_LIBCPP14_TUPLE_ELEMENT_T)
				#define LBAL_LIBCPP14_TUPLE_ELEMENT_T 201402L
			#endif	//	LBAL_LIBCPP14_TUPLE_ELEMENT_T

			#if !defined (LBAL_LIBCPP14_TUPLES_BY_TYPE)
				#define LBAL_LIBCPP14_TUPLES_BY_TYPE 201304L
			#endif	//	LBAL_LIBCPP14_TUPLES_BY_TYPE
		#endif	//	1900
	#endif	//	LBAL_CPP14_VERSION


	//	C++17 Library Features
	#if LBAL_cpp_version > LBAL_CPP14_VERSION
		#if (_MSC_VER >= 1800)
			#if !defined (LBAL_LIBCPP17_INCOMPLETE_CONTAINER_ELEMENTS)
				#define LBAL_LIBCPP17_INCOMPLETE_CONTAINER_ELEMENTS 201505L
			#endif	//	LBAL_LIBCPP17_INCOMPLETE_CONTAINER_ELEMENTS
		#endif	//	1800

		#if (_MSC_VER >= 1900)
			#if !defined (LBAL_LIBCPP17_ADDRESSOF_CONSTEXPR)
				#define LBAL_LIBCPP17_ADDRESSOF_CONSTEXPR 201603L
			#endif	//	LBAL_LIBCPP17_ADDRESSOF_CONSTEXPR

			#if !defined (LBAL_LIBCPP17_ALLOCATOR_TRAITS_IS_ALWAYS_EQUAL)
				#define LBAL_LIBCPP17_ALLOCATOR_TRAITS_IS_ALWAYS_EQUAL 201411L
			#endif	//	LBAL_LIBCPP17_ALLOCATOR_TRAITS_IS_ALWAYS_EQUAL

			//	Technically, MSVS 2015.2
			#if !defined (LBAL_LIBCPP17_AS_CONST)
				#define LBAL_LIBCPP17_AS_CONST 201510L
			#endif	//	LBAL_LIBCPP17_AS_CONST

			#if !defined (LBAL_LIBCPP17_BOOL_CONSTANT)
				#define LBAL_LIBCPP17_BOOL_CONSTANT 201505L
			#endif	//	LBAL_LIBCPP17_BOOL_CONSTANT

			#if !defined (LBAL_LIBCPP17_CLAMP)
				#define LBAL_LIBCPP17_CLAMP 201603L
			#endif	//	LBAL_LIBCPP17_CLAMP

			//	Technically, MSVS 2015.2
			#if !defined (LBAL_LIBCPP17_CHRONO)
				#define LBAL_LIBCPP17_CHRONO 201510L
			#endif	//	LBAL_LIBCPP17_CHRONO

			//	Technically, MSVS 2015.2
			#if !defined (LBAL_LIBCPP17_CHRONO_CONSTEXPR)
				#define LBAL_LIBCPP17_CHRONO_CONSTEXPR 201611L
			#endif	//	LBAL_LIBCPP17_CHRONO_CONSTEXPR

			#if !defined (LBAL_LIBCPP17_INVOKE)
				#define LBAL_LIBCPP17_INVOKE 201411L
			#endif	//	LBAL_LIBCPP17_INVOKE

			#if !defined (LBAL_LIBCPP17_IS_SWAPPABLE)
				#define LBAL_LIBCPP17_IS_SWAPPABLE 201603L
			#endif	//	LBAL_LIBCPP17_IS_SWAPPABLE

			#if !defined (LBAL_LIBCPP17_LOGICAL_TRAITS)
				#define LBAL_LIBCPP17_LOGICAL_TRAITS 201510L
			#endif	//	LBAL_LIBCPP17_LOGICAL_TRAITS

			#if !defined (LBAL_LIBCPP17_MAP_TRY_EMPLACE)
				#define LBAL_LIBCPP17_MAP_TRY_EMPLACE 201411L
			#endif	//	LBAL_LIBCPP17_MAP_TRY_EMPLACE

			#if !defined (LBAL_LIBCPP17_NONMEMBER_CONTAINER_ACCESS)
				#define LBAL_LIBCPP17_NONMEMBER_CONTAINER_ACCESS 201411L
			#endif	//	LBAL_LIBCPP17_NONMEMBER_CONTAINER_ACCESS

			#if !defined (LBAL_LIBCPP17_SHARED_MUTEX)
				#define LBAL_LIBCPP17_SHARED_MUTEX 201505L
			#endif	//	LBAL_LIBCPP17_SHARED_MUTEX

			//	Technically, MSVS 2015.2
			#if !defined (LBAL_LIBCPP17_TRANSPARENT_OPERATORS)
				#define LBAL_LIBCPP17_TRANSPARENT_OPERATORS 201510L
			#endif	//	LBAL_LIBCPP17_TRANSPARENT_OPERATORS

			#if !defined (LBAL_LIBCPP17_TYPE_TRAIT_VARIABLE_TEMPLATES)
				#define LBAL_LIBCPP17_TYPE_TRAIT_VARIABLE_TEMPLATES 201510L
			#endif	//	LBAL_LIBCPP17_TYPE_TRAIT_VARIABLE_TEMPLATES

			#if !defined (LBAL_LIBCPP17_UNCAUGHT_EXCEPTIONS)
				#define LBAL_LIBCPP17_UNCAUGHT_EXCEPTIONS 201411L
			#endif	//	LBAL_LIBCPP17_UNCAUGHT_EXCEPTIONS

			#if !defined (LBAL_LIBCPP17_UNORDERED_MAP_TRY_EMPLACE)
				#define LBAL_LIBCPP17_UNORDERED_MAP_TRY_EMPLACE 201411L
			#endif	//	LBAL_LIBCPP17_UNORDERED_MAP_TRY_EMPLACE

			#if !defined (LBAL_LIBCPP17_VOID_T)
				#define LBAL_LIBCPP17_VOID_T 201411L
			#endif	//	LBAL_LIBCPP17_VOID_T
		#endif	//	1900


		#if (_MSC_VER >= 1910)
			#if !defined (LBAL_LIBCPP17_ANY)
				#define LBAL_LIBCPP17_ANY 201603L
			#endif	//	LBAL_LIBCPP17_ANY

			#if !defined (LBAL_LIBCPP17_ANY_INTERFACE)
				#define LBAL_LIBCPP17_ANY_INTERFACE 201606L
			#endif	//	LBAL_LIBCPP17_ANY_INTERFACE

			#if !defined (LBAL_LIBCPP17_MAKE_FROM_TUPLE)
				#define LBAL_LIBCPP17_MAKE_FROM_TUPLE 201606L
			#endif	//	LBAL_LIBCPP17_MAKE_FROM_TUPLE

			#if !defined (LBAL_LIBCPP17_OPTIONAL)
				#define LBAL_LIBCPP17_OPTIONAL 201603L
			#endif	//	LBAL_LIBCPP17_OPTIONAL

			#if !defined (LBAL_LIBCPP17_OPTIONAL_GREATER_EQUAL)
				#define LBAL_LIBCPP17_OPTIONAL_GREATER_EQUAL 201606L
			#endif	//	LBAL_LIBCPP17_OPTIONAL_GREATER_EQUAL

			#if !defined (LBAL_LIBCPP17_OPTIONAL_INTERFACE)
				#define LBAL_LIBCPP17_OPTIONAL_INTERFACE 201606L
			#endif	//	LBAL_LIBCPP17_OPTIONAL_INTERFACE

			#if !defined (LBAL_LIBCPP17_SHARED_PTR_WEAK_TYPE)
				#define LBAL_LIBCPP17_SHARED_PTR_WEAK_TYPE 201606L
			#endif	//	LBAL_LIBCPP17_SHARED_PTR_WEAK_TYPE

			#if !defined (LBAL_LIBCPP17_STRING_VIEW)
				#define LBAL_LIBCPP17_STRING_VIEW 201603L
			#endif	//	LBAL_LIBCPP17_STRING_VIEW

			#if !defined (LBAL_LIBCPP17_STRING_VIEW_INTERFACE)
				#define LBAL_LIBCPP17_STRING_VIEW_INTERFACE 201606L
			#endif	//	LBAL_LIBCPP17_STRING_VIEW_INTERFACE

			#if !defined (LBAL_LIBCPP17_VARIANT)
				#define LBAL_LIBCPP17_VARIANT 201606L
			#endif	//	LBAL_LIBCPP17_VARIANT
		#endif	//	1910

		#if (_MSC_VER >= 1911)
			#if !defined (LBAL_LIBCPP17_ARRAY_CONSTEXPR)
				#define LBAL_LIBCPP17_ARRAY_CONSTEXPR 201603L
			#endif	//	LBAL_LIBCPP17_ARRAY_CONSTEXPR

			#if !defined (LBAL_LIBCPP17_ATOMIC_IS_ALWAYS_LOCK_FREE)
				#define LBAL_LIBCPP17_ATOMIC_IS_ALWAYS_LOCK_FREE 201603L
			#endif	//	LBAL_LIBCPP17_ATOMIC_IS_ALWAYS_LOCK_FREE

			#if !defined (LBAL_LIBCPP17_BYTE)
				#define LBAL_LIBCPP17_BYTE 201603L
			#endif	//	LBAL_LIBCPP17_BYTE

			#if !defined (LBAL_LIBCPP17_GCD_LCM)
				#define LBAL_LIBCPP17_GCD_LCM 201606L
			#endif	//	LBAL_LIBCPP17_GCD_LCM

			#if !defined(LBAL_LIBCPP17_HARDWARE_INTERFERENCE_SIZE)
				#define LBAL_LIBCPP17_HARDWARE_INTERFERENCE_SIZE 201703L
			#endif	//	LBAL_LIBCPP17_HARDWARE_INTERFERENCE_SIZE

			#if !defined (LBAL_LIBCPP17_HAS_UNIQUE_OBJECT_REPRESENTATIONS)
				#define LBAL_LIBCPP17_HAS_UNIQUE_OBJECT_REPRESENTATIONS 201606L
			#endif	//	LBAL_LIBCPP17_HAS_UNIQUE_OBJECT_REPRESENTATIONS

			#if !defined (LBAL_LIBCPP17_IS_INVOCABLE)
				#define LBAL_LIBCPP17_IS_INVOCABLE 201703L
			#endif	//	LBAL_LIBCPP17_IS_INVOCABLE

			#if !defined (LBAL_LIBCPP17_RAW_MEMORY_ALGORITHMS)
				#define LBAL_LIBCPP17_RAW_MEMORY_ALGORITHMS 201606L
			#endif	//	LBAL_LIBCPP17_RAW_MEMORY_ALGORITHMS

			#if !defined (LBAL_LIBCPP17_SCOPED_LOCK)
				#define LBAL_LIBCPP17_SCOPED_LOCK 201703L
			#endif	//	LBAL_LIBCPP17_SCOPED_LOCK
		#endif	//	1911

		#if (_MSC_VER >= 1912)
			#if !defined (LBAL_LIBCPP17_ENABLE_SHARED_FROM_THIS)
				#define LBAL_LIBCPP17_ENABLE_SHARED_FROM_THIS 201603L
			#endif	//	LBAL_LIBCPP17_ENABLE_SHARED_FROM_THIS

			#if !defined(LBAL_LIBCPP17_NODE_EXTRACT)
				#define LBAL_LIBCPP17_NODE_EXTRACT 201606L
			#endif	//	LBAL_LIBCPP17_NODE_EXTRACT

			#if !defined (LBAL_LIBCPP17_NOT_FN)
				#define LBAL_LIBCPP17_NOT_FN 201603L
			#endif	//	LBAL_LIBCPP17_NOT_FN

			#if !defined (LBAL_LIBCPP17_SHARED_PTR_ARRAYS)
				#define LBAL_LIBCPP17_SHARED_PTR_ARRAYS 201611L
			#endif	//	LBAL_LIBCPP17_SHARED_PTR_ARRAYS
		#endif	//	1912

		#if (_MSC_VER >= 1913)
			#if !defined (LBAL_LIBCPP17_APPLY)
				#define LBAL_LIBCPP17_APPLY 201603L
			#endif	//	LBAL_LIBCPP17_APPLY

			#if !defined (LBAL_LIBCPP17_BOYER_MOORE_SEARCHER)
				#define LBAL_LIBCPP17_BOYER_MOORE_SEARCHER 201603L
			#endif	//	LBAL_LIBCPP17_BOYER_MOORE_SEARCHER

			#if !defined (LBAL_LIBCPP17_MEMORY_RESOURCE)
				#define LBAL_LIBCPP17_MEMORY_RESOURCE 201603L
			#endif	//	LBAL_LIBCPP17_MEMORY_RESOURCE

			#if !defined (LBAL_LIBCPP17_SAMPLE)
				#define LBAL_LIBCPP17_SAMPLE 201603L
			#endif	//	LBAL_LIBCPP17_SAMPLE
		#endif	//	1913

		#if (_MSC_VER >= 1914)
			#if !defined (LBAL_LIBCPP17_EXECUTION)
				#define LBAL_LIBCPP17_EXECUTION 201603L
			#endif	//	LBAL_LIBCPP17_EXECUTION

			#if !defined (LBAL_LIBCPP17_FILESYSTEM)
				#define LBAL_LIBCPP17_FILESYSTEM 201603L

				#if defined (LBAL_LIBCPP17_FILESYSTEM_EXP)
					#undef LBAL_LIBCPP17_FILESYSTEM_EXP
					#define LBAL_LIBCPP17_FILESYSTEM_EXP 0
				#endif
			#endif	//	LBAL_LIBCPP17_FILESYSTEM

			#if !defined (LBAL_LIBCPP17_FILESYSTEM_PATHS_EXPANDED)
				#define LBAL_LIBCPP17_FILESYSTEM_PATHS_EXPANDED 201606L
			#endif	//	LBAL_LIBCPP17_FILESYSTEM_PATHS_EXPANDED

			#if !defined (LBAL_LIBCPP17_FILESYSTEM_DIRECTORY_ENTRY_CACHING)
				#define LBAL_LIBCPP17_FILESYSTEM_DIRECTORY_ENTRY_CACHING 201703L
			#endif	//	LBAL_LIBCPP17_FILESYSTEM_DIRECTORY_ENTRY_CACHING

			#if !defined (LBAL_LIBCPP17_FILESYSTEM_EXP)
				#define LBAL_LIBCPP17_FILESYSTEM_EXP 201603L
			#endif	//	LBAL_LIBCPP17_FILESYSTEM_EXP

			#if !defined (LBAL_LIBCPP17_HYPOT)
				#define LBAL_LIBCPP17_HYPOT 201603L
			#endif	//	LBAL_LIBCPP17_HYPOT

			#if !defined(LBAL_LIBCPP17_LAUNDER)
				#define LBAL_LIBCPP17_LAUNDER 201606L
			#endif	//	LBAL_LIBCPP17_LAUNDER

			#if !defined (LBAL_LIBCPP17_MATH_SPECIAL_FUNCTIONS)
				#define LBAL_LIBCPP17_MATH_SPECIAL_FUNCTIONS 201603L
			#endif	//	LBAL_LIBCPP17_MATH_SPECIAL_FUNCTIONS

			#if !defined(LBAL_LIBCPP17_PARALLEL_ALGORITHM)
				#define LBAL_LIBCPP17_PARALLEL_ALGORITHM 201603L
			#endif	//	LBAL_LIBCPP17_PARALLEL_ALGORITHM
		#endif	//	1914

		#if (_MSC_VER >= 1915)
			#if !defined (LBAL_LIBCPP17_IS_AGGREGATE)
				#define LBAL_LIBCPP17_IS_AGGREGATE 201703L
			#endif	//	LBAL_LIBCPP17_IS_AGGREGATE
		#endif	//	1915
	#endif	//	LBAL_CPP17_VERSION


	//	C++20 Library Features
	//	MSVC has had a `<version>` header since MSVS 2019 16.2 (_MSC_VER 1922),
	//	so if a feature requires at least that _and_ it was correctly
	//	identified in `<version>`, we don’t bother explicitly checking for it
	//	here.
	#if LBAL_cpp_version > LBAL_CPP17_VERSION
		#if (_MSC_VER >= 1911)
			#if !defined (LBAL_LIBCPP2A_ARRAY_CONSTEXPR_ITERATOR)
				#define LBAL_LIBCPP2A_ARRAY_CONSTEXPR_ITERATOR 201803L
			#endif	//	LBAL_LIBCPP2A_ARRAY_CONSTEXPR_ITERATOR
		#endif	//	1911

		#if (_MSC_VER >= 1920)
			#if !defined (LBAL_LIBCPP2A_REMOVE_CVREF)
				#define LBAL_LIBCPP2A_REMOVE_CVREF 201711L
			#endif	//	LBAL_LIBCPP2A_REMOVE_CVREF
		#endif	//	1920

		#if (_MSC_VER >= 1921)
			#if !defined (LBAL_LIBCPP2A_LIST_REMOVE_RETURN_TYPE)
				#define LBAL_LIBCPP2A_LIST_REMOVE_RETURN_TYPE 201806L
			#endif	//	LBAL_LIBCPP2A_LIST_REMOVE_RETURN_TYPE

			#if !defined (LBAL_LIBCPP2A_SHIFT)
				#define LBAL_LIBCPP2A_SHIFT 201806L
			#endif	//	LBAL_LIBCPP2A_SHIFT

			#if !defined (LBAL_LIBCPP2A_STARTS_ENDS_WITH)
				#define LBAL_LIBCPP2A_STARTS_ENDS_WITH 201711L
			#endif	//	LBAL_LIBCPP2A_STARTS_ENDS_WITH

			#if !defined (LBAL_LIBCPP2A_TYPE_IDENTITY)
				#define LBAL_LIBCPP2A_TYPE_IDENTITY 201806L
			#endif	//	LBAL_LIBCPP2A_TYPE_IDENTITY

			#if !defined (LBAL_LIBCPP2A_UNWRAP_REF)
				#define LBAL_LIBCPP2A_UNWRAP_REF 201811L
			#endif	//	LBAL_LIBCPP2A_UNWRAP_REF
		#endif	//	1921

		#if (_MSC_VER >= 1922)
			//	__SEEME__ Not in `<version>` as of 1924
			#if !defined (LBAL_LIBCPP2A_ATOMIC_FLOAT)
				#define LBAL_LIBCPP2A_ATOMIC_FLOAT 201711L
			#endif	//	LBAL_LIBCPP2A_ATOMIC_FLOAT

			//	__SEEME__ Not in `<version>` as of 1924
			#if !defined (LBAL_LIBCPP2A_ENDIAN)
				#define LBAL_LIBCPP2A_ENDIAN 201907L
			#endif	//	LBAL_LIBCPP2A_ENDIAN

			//	__SEEME__ Not in `<version>` as of 1924
			#if !defined (LBAL_LIBCPP2A_ENDIAN_BIT)
				#define LBAL_LIBCPP2A_ENDIAN_BIT 201907L
			#endif	//	LBAL_LIBCPP2A_ENDIAN_BIT

			//	__SEEME__ Not in `<version>` as of 1924
			#if !defined (LBAL_LIBCPP2A_TO_ADDRESS)
				#define LBAL_LIBCPP2A_TO_ADDRESS 201711L
			#endif	//	LBAL_LIBCPP2A_TO_ADDRESS
		#endif	//	1922

		#if (_MSC_VER >= 1923)
			//	__SEEME__ Not in `<version>` as of 1924
			#if !defined (LBAL_LIBCPP2A_NOTHROW_CONVERTIBLE)
				#define LBAL_LIBCPP2A_NOTHROW_CONVERTIBLE 201806L
			#endif	//	LBAL_LIBCPP2A_NOTHROW_CONVERTIBLE
		#endif	//	1923

		#if (_MSC_VER >= 1924)
			//	__SEEME__ Not in `<version>` as of 1924
			#if !defined (LBAL_LIBCPP2A_CONCEPTS_STANDARD_CASE)
				#define LBAL_LIBCPP2A_CONCEPTS_STANDARD_CASE 201907L
			#endif	//	LBAL_LIBCPP2A_CONCEPTS_STANDARD_CASE
		#endif	//	1923
	#endif	//	LBAL_CPP20_VERSION


	#if !defined(LBAL_LIBCPP17_TO_CHARS) \
			&& LBAL_LIBCPP17_TO_CHARS_INTEGER \
			&& LBAL_LIBCPP17_TO_CHARS_FP
		#define LBAL_LIBCPP17_TO_CHARS LBAL_LIBCPP17_TO_CHARS_FP
	#endif
#else
	#error "lbalStandardLibraryMSVCPostInitialization.hpp was directly included with the incorrect Standard Library implementation"
#endif
